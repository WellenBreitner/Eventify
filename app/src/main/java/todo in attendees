1. Once payment is successful, the system sends a confirmation email or notification with ticket details. System then redirects to the homepage.

2.When tickets become available, the system identifies the next attendee on the waitlist.
3.The system automatically notifies the attendee via email. System removes the attendee from the waitlist upon successful purchase.
4. If no tickets become available, the system notifies waitlisted attendees when the event date approaches

// for eo
private fun getAllBookings() {
        val firebase = FirebaseDatabase.getInstance()
        val bookings = firebase.getReference("bookings")

        bookings.get()
            .addOnSuccessListener { snapshot ->
            if (snapshot.exists()){
                for (data in snapshot.children){
                    val booking = data.getValue(BookingModelData::class.java)
                    if (booking != null && booking.eventOrganizerID == eo_id){
                        if (booking.eventID in ticketSales.keys){
                            val eventID = booking.eventID.toString()
                            ticketSales[eventID] = ticketSales.getOrDefault(eventID,0) + (booking.numberOfTicket?.toInt() ?: 0)
                            Log.d("TAG", "getAllBookings1: ${ticketSales.size}")
                        }else{
                            val eventID = booking.eventID.toString()
                            val sales = booking.numberOfTicket
                            ticketSales[eventID] = sales?.toInt() ?:0
                            Log.d("TAG", "getAllBookings2: ${ticketSales.size}")
                        }
                    }
                }
                for ((keys,value ) in ticketSales){
                    Log.d("TAG", "ticket : $keys $value" )
                }
            }
        }
    }